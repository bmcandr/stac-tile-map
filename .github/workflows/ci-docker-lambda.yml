on:
  push:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main ]

name: Docker CI/CD Pipeline

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: lambda
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile.aws.lambda
        push: true
        tags: "${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPO_NAME }}:${{ github.sha }}"
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # - name: Build, tag, and push the image to Amazon ECR
    #   id: build-image
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
    #     IMAGE_TAG: ${{ github.sha }}
    #   run: |
    #     # Build a docker container and push it to ECR 
    #     docker buildx \
    #       --push \
    #       --cache-to type=gha \
    #       --cache-from type=gha \
    #       --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
    #       -f Dockerfile.aws.lambda .
    #     echo "Pushing image to ECR..."
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update Lambda function code
      id: update-lambda
      env:
        IMAGE_URI: "${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPO_NAME }}:${{ github.sha }}"
      run: |
        aws lambda update-function-code --function-name ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }} --image-uri $IMAGE_URI